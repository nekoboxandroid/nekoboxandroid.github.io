<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoboxandroid.github.io/news/article-22408.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <title>CSS预编译器_在线工具</title>
        <meta name="description" content="零.CSS预编译器 CSS预处理器是指对生成CSS前的某一语法的处理。CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，供项目使用 CSS预处理器为CSS增加一" />
        <link rel="icon" href="/assets/website/img/nekoboxandroid/favicon.ico" type="image/x-icon"/>
    <!-- Additional CSS Files -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/nekoboxandroid/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/nekoboxandroid/font-awesome.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/nekoboxandroid/templatemo-art-factory.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/nekoboxandroid/owl-carousel.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N7680DZ2M0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N7680DZ2M0');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ***** Preloader Start ***** -->
    <div id="preloader">
        <div class="jumper">
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
    <!-- ***** Preloader End ***** -->
    <!-- ***** Header Area Start ***** -->
    <header class="header-area header-sticky">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <nav class="main-nav">
                                                <a href="/" class="logo"><span>Nekobox Android</span></a>
                                                
                        <!-- ***** Menu Start ***** -->
                        <ul class="nav">
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                        <li><a href="#">关于</a></li>
                            <li><a href="#">联系</a></li>
                        </ul>
                        <a class='menu-trigger'>
                            <span>Menu</span>
                        </a>
                        <!-- ***** Menu End ***** -->
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- ***** Header Area End ***** -->
    <!-- ***** Welcome Area Start ***** -->
    <div class="welcome-area list" id="welcome">
        <!-- ***** Header Text Start ***** -->
        <div class="header-text">
            <div class="container">
                <div class="row">
                    <div class="left-text col-lg-6 col-md-6 col-sm-12 col-xs-12" data-scroll-reveal="enter left move 30px over 0.6s after 0.4s">
                        <h1>CSS预编译器_在线工具</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12" data-scroll-reveal="enter right move 30px over 0.6s after 0.4s">
                        <img href="/assets/website/img/nekoboxandroid/slider-icon.png" class="rounded img-fluid d-block mx-auto" alt="First Vector Graphic">
                    </div>
                </div>
            </div>
        </div>
        <!-- ***** Header Text End ***** -->
    </div>
    <!-- ***** Welcome Area End ***** -->
    <!-- ***** Features Big Item Start ***** -->
    <section class="section" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="NekoBoxNode官网节点站" data-url="https://nekoboxnode.github.io">
                  				  				  				<p><span style="font-size: 18pt"><strong>零.CSS预编译器</strong></span></p> <p style="margin-left: 30px"><span style="font-size: 14px">CSS预处理器是指对生成CSS前的某一语法的处理。CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，供项目使用</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">CSS预处理器为CSS增加一些编程的特性，如增加了规则、变量、混入、选择器、继承等等特性，无需考虑游览器的兼容性问题</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">&nbsp;有助于更好地组织管理样式文件，以及更高效地开发项目</span></p> <p style="margin-left: 30px"><span style="font-size: 14px">下面介绍主流的CSS预编译器三剑客：</span></p> <p><span style="font-size: 18pt"><strong>一. CSS预编译器三剑客（Sass、Less、Stylus)</strong></span></p> <p><span><span style="font-size: 16px"><strong>Sass</strong>：<span style="font-size: 14px">Sass</span></span>包括两套语法。最开始的语法叫做"缩进语法"，使用缩进来区分代码块，并且用回车将不同规则分隔开（不使用{}和；）。</span></p> <p><span>　　而新的语法叫做“SCSS”，使用和CSS类似的块语法，使用大括号将不同的规则分开，分号将具体的样式分开。这两套语法通过.sass和.scss两个文件扩展名区分开</span></p> <p><span style="font-size: 16px"><strong>1.使用：</strong></span></p> <p><span>通过VSCode安装Live Sass Compiler插件等方法...</span></p> <p><span style="font-size: 16px"><strong>2.CSS功能扩展：</strong></span></p> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.1：嵌套规则</strong></span></p> <p style="margin-left: 90px"><span>Sass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器，例如：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 97%</span>;<span style="color: rgba(255, 0, 0, 1)">    p, div {     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 2em</span>;<span style="color: rgba(255, 0, 0, 1)">     a { font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>; }<span style="color: rgba(128, 0, 0, 1)">   }    pre</span>{<span style="color: rgba(255, 0, 0, 1)"> font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 3em</span>; }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><span>嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理，编译后：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 97%</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main p, #main div</span>{<span style="color: rgba(255, 0, 0, 1)">     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 2em</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main p a, #main div a</span>{<span style="color: rgba(255, 0, 0, 1)">       font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main pre</span>{<span style="color: rgba(255, 0, 0, 1)">     font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 3em</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.2：父选择器&amp;</strong></span></p> <p style="margin-left: 90px"><span>在使用2.1嵌套规则时，有时也需要使用嵌套外层的父选择器，例如，给某个元素设定hover样式时</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">a</span>{<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;<span style="color: rgba(255, 0, 0, 1)">   &amp;</span>:<span style="color: rgba(0, 0, 255, 1)">hover { text-decoration: underline</span>; }<span style="color: rgba(128, 0, 0, 1)">   body.firefox &amp;</span>{<span style="color: rgba(255, 0, 0, 1)"> font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> normal</span>; }<span style="color: rgba(128, 0, 0, 1)"> }  #main</span>{<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> black</span>;<span style="color: rgba(255, 0, 0, 1)">   a {     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">     &amp;</span>:<span style="color: rgba(0, 0, 255, 1)">hover { color: red</span>; }<span style="color: rgba(128, 0, 0, 1)">   } }</span></pre> </div> <p style="margin-left: 90px"><span>编译后：CSS 文件中&amp;将被替换成嵌套外层的父选择器，如果含有多层嵌套，最外层的父选择器会一层一层向下传递</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">a</span>{<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> none</span>;  }<span style="color: rgba(128, 0, 0, 1)"> a:hover</span>{<span style="color: rgba(255, 0, 0, 1)">     text-decoration</span>:<span style="color: rgba(0, 0, 255, 1)"> underline</span>;  }<span style="color: rgba(128, 0, 0, 1)"> body.firefox a</span>{<span style="color: rgba(255, 0, 0, 1)">     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> normal</span>;  }<span style="color: rgba(128, 0, 0, 1)">  #main</span>{<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> black</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main a</span>{<span style="color: rgba(255, 0, 0, 1)">     font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }<span style="color: rgba(128, 0, 0, 1)"> #main a:hover</span>{<span style="color: rgba(255, 0, 0, 1)">       color</span>:<span style="color: rgba(0, 0, 255, 1)"> red</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.3：属性嵌套</strong></span></p> <p style="margin-left: 90px"><span>个别 CSS 属性遵循相同的命名空间 (namespace)，比如<code>font-family, font-size, font-weight</code>&nbsp;都以<code>font</code>&nbsp;作为属性的命名<span>空间。</span></span></p> <p style="margin-left: 90px"><span>为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中，例如：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.funky</span>{<span style="color: rgba(255, 0, 0, 1)">   font</span>:<span style="color: rgba(0, 0, 255, 1)"> {     family: fantasy</span>;<span style="color: rgba(255, 0, 0, 1)">     size</span>:<span style="color: rgba(0, 0, 255, 1)"> 30em</span>;<span style="color: rgba(255, 0, 0, 1)">     weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 60px"><strong></strong><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.funky</span>{<span style="color: rgba(255, 0, 0, 1)">   font-family</span>:<span style="color: rgba(0, 0, 255, 1)"> fantasy</span>;<span style="color: rgba(255, 0, 0, 1)">   font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 30em</span>;<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;  }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.4：变量$</strong></span></p> <p style="margin-left: 90px">Sass最普遍的用法就是变量，以$开头，复制与css属性写法一样，直接调用即可</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$width: 100px   #main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }</pre> </div> <p style="margin-left: 90px"><span>变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用</span></p> <p style="margin-left: 90px"><span>（全局变量）</span></p> <p style="margin-left: 90px"><span>将局部变量转换为全局变量可以添加<code>!global</code>&nbsp;声明：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   $width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em !global</span>;<span style="color: rgba(255, 0, 0, 1)">//局部变量转全局变量   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>; }</pre> </div> <p style="margin-left: 90px"><span>编译为:</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#main</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em</span>; }<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 5em</span>; }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.5：运算</strong></span></p> <p style="margin-left: 90px"><span>所有数据类型均支持 == 或 != ,此外，每种数据类型也有各自支持的运算方式</span></p> <p style="margin-left: 90px">目前感觉这个运算用处不大，但今后遇到某个项目也可能会用到</p> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.6：@-Rules与指令</strong></span></p> <p style="margin-left: 90px"><span><strong>2.6.1：</strong>Sass 拓展了<code>@import</code>&nbsp;的功能，允许其导入 SCSS 或 Sass 文件，被导入的文件将合并编译到同一个 CSS 文件中，</span></p> <p style="margin-left: 90px"><span>另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@import "foo.scss";  @import "foo";</span></pre> </div> <p style="margin-left: 90px"><span>都会导入文件foo.scss</span></p> <p style="margin-left: 90px">如果需要导入SCSS或者Sass文件，但不希望编译成CSS文件，在文件名前添加下划线即可</p> <p style="margin-left: 90px">例如，将文件命名为&nbsp;_colors.scss，便不会编译成_colors.css&nbsp;文件。</p> <p style="margin-left: 90px"><strong>2.6.2：</strong><span>Sass 中 @media 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套</span></p> <p style="margin-left: 90px"><span>如果&nbsp;@media&nbsp;嵌套在 CSS 规则内，编译时，&nbsp;@media&nbsp;将被编译到文件的最外层，包含嵌套的父选择器</span></p> <p style="margin-left: 90px"><span>这个功能让&nbsp;@media&nbsp;用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程</span></p> <p style="margin-left: 90px">@media<span>可以使用 Sass（比如变量，函数，以及运算符）代替条件的名称或者值：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 300px</span>;<span style="color: rgba(255, 0, 0, 1)">   @media screen and (orientation</span>:<span style="color: rgba(0, 0, 255, 1)"> landscape) {     width: 500px</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">   width</span>:<span style="color: rgba(0, 0, 255, 1)"> 300px</span>;  }<span style="color: rgba(128, 0, 0, 1)"> @media screen and (orientation: landscape)</span>{<span style="color: rgba(255, 0, 0, 1)">     .sidebar {       width</span>:<span style="color: rgba(0, 0, 255, 1)"> 500px</span>;      }<span style="color: rgba(128, 0, 0, 1)">  }</span></pre> </div> <p style="margin-left: 90px"><strong>2.6.3：</strong>@extend&nbsp;，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.error</span>{<span style="color: rgba(255, 0, 0, 1)">   border</span>:<span style="color: rgba(0, 0, 255, 1)"> 1px #f00</span>;<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #fdd</span>; }<span style="color: rgba(128, 0, 0, 1)"> .seriousError</span>{<span style="color: rgba(255, 0, 0, 1)">   @extend .error;   border-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 3px</span>; }</pre> </div> <p style="margin-left: 60px"><span style="font-size: 15px"><strong>2.7：Mixin</strong></span></p> <p style="margin-left: 90px"><span>Mixin用于定义可重复使用的样式，避免了使用无语意的 class，比如.float-left<br /></span></p> <p style="margin-left: 90px"><span>混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式</span></p> <p style="margin-left: 90px"><span>混合样式中也可以包含其他混合样式</span></p> <p style="margin-left: 90px"><strong>2.7.1：定义Mixin</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@mixin large-text</span>{<span style="color: rgba(255, 0, 0, 1)">   font</span>:<span style="color: rgba(0, 0, 255, 1)"> {     family: Arial</span>;<span style="color: rgba(255, 0, 0, 1)">     size</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">     weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;   }<span style="color: rgba(128, 0, 0, 1)">   color: #ff0000;   &amp;:after</span>{<span style="color: rgba(255, 0, 0, 1)">     content</span>:<span style="color: rgba(0, 0, 255, 1)"> "."</span>;<span style="color: rgba(255, 0, 0, 1)">     display</span>:<span style="color: rgba(0, 0, 255, 1)"> block</span>;<span style="color: rgba(255, 0, 0, 1)">     height</span>:<span style="color: rgba(0, 0, 255, 1)"> 0</span>;<span style="color: rgba(255, 0, 0, 1)">     clear</span>:<span style="color: rgba(0, 0, 255, 1)"> both</span>;<span style="color: rgba(255, 0, 0, 1)">     visibility</span>:<span style="color: rgba(0, 0, 255, 1)"> hidden</span>;   }<span style="color: rgba(128, 0, 0, 1)"> }</span></pre> </div> <p style="margin-left: 90px"><strong>2.7.2：引用Mixin</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.page-title</span>{<span style="color: rgba(255, 0, 0, 1)">   @include large-text;   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 4px</span>;<span style="color: rgba(255, 0, 0, 1)">   margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 10px</span>; }</pre> </div> <p style="margin-left: 90px"><span>编译为：</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.page-title</span>{<span style="color: rgba(255, 0, 0, 1)">   font-family</span>:<span style="color: rgba(0, 0, 255, 1)"> Arial</span>;<span style="color: rgba(255, 0, 0, 1)">   font-size</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">   font-weight</span>:<span style="color: rgba(0, 0, 255, 1)"> bold</span>;<span style="color: rgba(255, 0, 0, 1)">   color</span>:<span style="color: rgba(0, 0, 255, 1)"> #ff0000</span>;<span style="color: rgba(255, 0, 0, 1)">   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 4px</span>;<span style="color: rgba(255, 0, 0, 1)">   margin-top</span>:<span style="color: rgba(0, 0, 255, 1)"> 10px</span>;  }</pre> </div> <p style="margin-left: 90px"><strong>2.7.3：Mixin参数</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">@mixin sexy-border($color, $width：10px)</span>{<span style="color: rgba(255, 0, 0, 1)"> //默认值   border</span>:<span style="color: rgba(0, 0, 255, 1)"> {     color: $color</span>;<span style="color: rgba(255, 0, 0, 1)">     width</span>:<span style="color: rgba(0, 0, 255, 1)"> $width</span>;<span style="color: rgba(255, 0, 0, 1)">     style</span>:<span style="color: rgba(0, 0, 255, 1)"> dashed</span>;   }<span style="color: rgba(128, 0, 0, 1)"> } p</span>{<span style="color: rgba(255, 0, 0, 1)"> @include sexy-border(blue, 1in);</span>}</pre> </div> <p style="margin-left: 90px"><span>编译后</span></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">p</span>{<span style="color: rgba(255, 0, 0, 1)">   border-color</span>:<span style="color: rgba(0, 0, 255, 1)"> blue</span>;<span style="color: rgba(255, 0, 0, 1)">   border-width</span>:<span style="color: rgba(0, 0, 255, 1)"> 1in</span>;<span style="color: rgba(255, 0, 0, 1)">   border-style</span>:<span style="color: rgba(0, 0, 255, 1)"> dashed</span>;  }</pre> </div> <p style="margin-left: 90px">@Mixin&nbsp;可以用<strong><code>=</code></strong>&nbsp;表示，而<code>@include</code>&nbsp;可以用<strong><code>+</code></strong>&nbsp;表示</p> <p style="margin-left: 90px"><strong>2.8：函数</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$grid-width: 40px; $gutter-width: 10px;  @function grid-width($n)</span>{<span style="color: rgba(255, 0, 0, 1)">   @return $n * $grid-width + ($n - 1) * $gutter-width;</span>}<span style="color: rgba(128, 0, 0, 1)">  #sidebar</span>{<span style="color: rgba(255, 0, 0, 1)"> width</span>:<span style="color: rgba(0, 0, 255, 1)"> grid-width(5)</span>; }</pre> </div> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">#sidebar</span>{<span style="color: rgba(255, 0, 0, 1)">width</span>:<span style="color: rgba(0, 0, 255, 1)"> 240px</span>; }<span style="color: rgba(128, 0, 0, 1)"> //编译结果</span></pre> </div> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>Less：</strong></span><span>Less是一门向后兼容的CSS扩展语言，语法上和Sass有很大的共性，它受Sass的影响，但对后来引入的SCSS格式有影响</span></p> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>Stylus：</strong></span>在 stylus 中同样可以使用变量、函数、判断、循环一系列 CSS 没有的东西来编写样式文件，使用时需要Node.js</p> <p style="margin-left: 60px"><strong>基本使用：</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">$background-color = lightblue add (a, b = a)     a = unit(a, px)     b = unit(b, px)     a + b  .list-item .text-box     span         background-color: $background-color         margin: add(10)         padding: add(10, 5)     &amp;:hover         background-color: powderblue</span></pre> </div> <p style="margin-left: 60px">编译后</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 0, 0, 1)">.list-item span, .text-box span</span>{<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #add8e6</span>;<span style="color: rgba(255, 0, 0, 1)">   margin</span>:<span style="color: rgba(0, 0, 255, 1)"> 20px</span>;<span style="color: rgba(255, 0, 0, 1)">   padding</span>:<span style="color: rgba(0, 0, 255, 1)"> 15px</span>}<span style="color: rgba(128, 0, 0, 1)"> .list-item:hover, .text-box:hover</span>{<span style="color: rgba(255, 0, 0, 1)">   background-color</span>:<span style="color: rgba(0, 0, 255, 1)"> #b0e0e6</span>; }</pre> </div> <p style="margin-left: 30px"><strong><a href="postcss.com.cn" target="_blank" rel="nofollow">PostCSS</a>：</strong>一个用 JavaScript 工具和插件转换 CSS 代码的工具</p> <p style="margin-left: 60px">特点：</p> <ul> <li style="list-style-type: none"> <ul> <li>增加代码的可读性：可自动添加属性前缀</li> <li>可使用最新的CSS语法，如变量定义</li> <li>可模块化CSS，<code>CSS Modules</code></li> <li>可检查CSS语法错误，避免出错</li> <li>强大的格子系统LostGrid</li> </ul> </li> </ul> <p><span style="font-size: 18pt"><strong>二.异同点</strong></span></p> <p style="margin-left: 30px"><strong><span style="font-size: 16px">Less与Sass的异同</span>：</strong></p> <p style="margin-left: 30px"><span style="font-size: 16px"><strong>　　异：</strong></span></p> <ul> <li style="list-style-type: none"> <ul> <li>混入(Mixins)——class中的class</li> <li>参数混入——可以传递参数的class，就像函数一样</li> <li>嵌套规则——Class中嵌套class，从而减少重复的代码</li> <li>运算——CSS中用上数学</li> <li>颜色功能——可以编辑颜色</li> <li>名字空间(namespace)——分组样式，从而可以被调用</li> <li>作用域——局部修改样式</li> <li>JavaScript 赋值——在CSS中使用JavaScript表达式赋值</li> </ul> </li> </ul> <p style="margin-left: 60px"><span style="font-size: 16px"><strong>同：</strong></span></p> <ul> <li style="list-style-type: none"> <ul> <li>Less是基于JavaScript，是在客户端处理的；Sass是基于Ruby(一种简单快捷的面向对象的脚本语言)，是在服务器端处理的</li> <li>关于变量在Less和Sass中的唯一区别就是Less用@，Sass用$</li> <li>输出设置，Less没有输出设置，Sass提供4中输出选项：nested, compact, compressed 和 expanded</li> <li>Sass支持条件语句，可以使用if{}else{},for{}循环等等，而Less不支持</li> </ul> </li> </ul> <p><span style="font-size: 18pt"><strong>三.总结</strong></span></p> <p style="margin-left: 30px">为CSS增加一些编程的特性，如规则、变量、混入、选择器、继承等等特性，上手都很简单</p> <p style="margin-left: 30px">(CSS的调试，需要编译，文件过大都是预处理器的缺点)</p> <p>参考：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/xhxdd/p/12355887.html"  target="_blank" rel="nofollow">Stylus的基本使用</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.html.cn/qa/css3/13530.html"  target="_blank" rel="nofollow">Less与Sass的异同？</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.csdn.net/tags/MtjaQgwsNDUxNDItYmxvZwO0O0OO0O0O.html"  target="_blank" rel="nofollow">什么是CSS预处理器？</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.sass.hk/docs/"  target="_blank" rel="nofollow">Sass中文网</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21956.htm">什么品牌狗粮比较好（什么品牌狗粮比较好用）</a></p>
                                        <p>下一个：<a href="/news/article-22409.htm">2020宠物疫苗收费标准（宠物疫苗收费价目表）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-8-8-latest-nekobox-node.htm" title="8月8日 | Nekobox Android每天更新22M/S免费节点订阅链接">8月8日 | Nekobox Android每天更新22M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-nekobox-node-github.htm" title="11月7日 | Nekobox Android每天更新19.5M/S免费节点订阅链接">11月7日 | Nekobox Android每天更新19.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-21-nekobox-github.htm" title="8月21日 | Nekobox Android每天更新18.1M/S免费节点订阅链接">8月21日 | Nekobox Android每天更新18.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-6-free-high-speed-nodes.htm" title="9月6日 | Nekobox Android每天更新20.7M/S免费节点订阅链接">9月6日 | Nekobox Android每天更新20.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-10-nekobox-node-share.htm" title="9月10日 | Nekobox Android每天更新19.2M/S免费节点订阅链接">9月10日 | Nekobox Android每天更新19.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-28435.htm" title="从多线程的基础，到JDK8的异步编程，再到异步框架的选择">从多线程的基础，到JDK8的异步编程，再到异步框架的选择</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-1-nekobox-node-windows.htm" title="10月1日 | Nekobox Android每天更新18.1M/S免费节点订阅链接">10月1日 | Nekobox Android每天更新18.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-18794.htm" title="动物疫站给猫打疫苗收钱吗? 动物疫站给猫打疫苗收钱吗多少钱">动物疫站给猫打疫苗收钱吗? 动物疫站给猫打疫苗收钱吗多少钱</a></li>
                        <li class="py-2"><a href="/news/article-22868.htm" title="深圳动物打疫苗需要钱吗现在（深圳动物防疫所）">深圳动物打疫苗需要钱吗现在（深圳动物防疫所）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-13-free-subscribe-node.htm" title="8月13日 | Nekobox Android每天更新22.3M/S免费节点订阅链接">8月13日 | Nekobox Android每天更新22.3M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="hr"></div>
                </div>
            </div>
        </div>
    </section>
    <!-- ***** Features Big Item End ***** -->
        <!-- ***** Footer Start ***** -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-lg-7 col-md-12 col-sm-12">
                    <p class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        Nekobox Android免费节点分享站 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-5 col-md-12 col-sm-12">
                    <ul class="social">
                        <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
                        <li><a href="#"><i class="fa fa-rss"></i></a></li>
                        <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/nekoboxandroid/jquery-2.1.0.min.js"></script>
    <!-- Bootstrap -->
    <script src="/assets/website/js/frontend/nekoboxandroid/popper.js"></script>
    <script src="/assets/website/js/frontend/nekoboxandroid/bootstrap.min.js"></script>
    <!-- Plugins -->
    <script src="/assets/website/js/frontend/nekoboxandroid/owl-carousel.js"></script>
    <script src="/assets/website/js/frontend/nekoboxandroid/scrollreveal.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxandroid/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxandroid/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxandroid/imgfix.min.js"></script>
    <!-- Global Init -->
    <script src="/assets/website/js/frontend/nekoboxandroid/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>